Cyber Hand Project Rules

### Core Principles
Next.js 15.2.4/React 19 project with streaming focus
TypeScript-first, modular (<500 lines), Server/Client Component separation
Read PLANNING.md/TASK.md before starting any work
Never assume context, verify packages and paths

### Architecture
Server Components for data fetching, Client Components at leaf nodes only
Implement proper Suspense boundaries following Next.js 15 streaming patterns
Use React's cache() for deduplication and parallel data fetching
Keep UI components separate from data fetching logic
API route parameter handling as Promises (Next.js 15 change)

### Performance
Budget: <3s initial load (3G), <300KB JS bundle
Core Web Vitals targets: LCP <2.5s, TBT <200ms, CLS <0.1
Lighthouse scores >90 for Performance/SEO/Accessibility
Optimize: Next.js Image component, font preloading, skeleton loaders
Memory: code splitting, heap limits, event cleanup

### Code Quality
TypeScript interfaces instead of 'any', underscore prefix for unused variables
Content security policies (dev vs prod), proper error boundaries
Theme-based styling with centralized CSS variables
Document code, update README, mark completed TASK.md items

### Components
'use client' directive only when required for interactivity
Client component wrappers to prevent serialization errors
Follow established component hierarchy and naming conventions
Test files mirroring component structure

### SEO & Metadata
Consistent metadata components, JSON-LD structured data
Canonical URLs, semantic HTML, accessibility standards
Privacy-focused analytics with custom event tracking