version: '3.8'

services:
  architecture-guard:
    build:
      context: ./mcp-servers/architecture-guard
      dockerfile: Dockerfile
    volumes:
      - ./:/app/project
      - architecture-guard-logs:/app/logs
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PROJECT_ROOT=/app/project
      - MCP_DEBUG=true
    restart: unless-stopped
    stdin_open: true  # Required for STDIN communication
    tty: true         # Allocate a pseudo-TTY
    # Explicitly disable healthcheck as we're using STDIN/STDOUT
    healthcheck:
      disable: true

  dependency-guard:
    build:
      context: ./mcp-servers/dependency-validator
      dockerfile: Dockerfile
    volumes:
      - ./:/app/project
      - dependency-guard-logs:/app/logs
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PROJECT_ROOT=/app/project
      - MCP_DEBUG=true
    restart: unless-stopped
    stdin_open: true  # Required for STDIN communication
    tty: true         # Allocate a pseudo-TTY
    # Explicitly disable healthcheck as we're using STDIN/STDOUT
    healthcheck:
      disable: true

  style-validator:
    build:
      context: ./mcp-servers/style-validator
      dockerfile: Dockerfile
    volumes:
      - ./:/app/project
      - style-validator-logs:/app/logs
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PROJECT_ROOT=/app/project
      - MCP_DEBUG=true
    restart: unless-stopped
    stdin_open: true  # Required for STDIN communication
    tty: true         # Allocate a pseudo-TTY
    # Explicitly disable healthcheck as we're using STDIN/STDOUT
    healthcheck:
      disable: true

volumes:
  architecture-guard-logs:
  dependency-guard-logs:
  style-validator-logs:
