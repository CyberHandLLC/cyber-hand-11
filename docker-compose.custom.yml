version: '3.8'

services:
  architecture-guard:
    build:
      context: ./mcp-servers/architecture-guard
      dockerfile: Dockerfile
    ports:
      - "3901:3901"
    volumes:
      - ./:/app/project
      - architecture-guard-logs:/app/logs
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PROJECT_ROOT=/app/project
      - PORT=3901
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3901/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dependency-guard:
    build:
      context: ./mcp-servers/dependency-validator
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    volumes:
      - ./:/app/project
      - dependency-guard-logs:/app/logs
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PROJECT_ROOT=/app/project
      - PORT=8002
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  style-validator:
    build:
      context: ./mcp-servers/style-validator
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    volumes:
      - ./:/app/project
      - style-validator-logs:/app/logs
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=info
      - PROJECT_ROOT=/app/project
      - PORT=8003
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  docs-validator:
    build:
      context: ./mcp-servers/docs-validator
      dockerfile: Dockerfile
    stdin_open: true # Required for STDIN/STDOUT MCP communication
    tty: true # Required for proper terminal handling
    volumes:
      - ./:/app/project
      - docs-validator-logs:/app/logs
    environment:
      - NODE_ENV=production
      - MCP_DEBUG=true # Enable debug logging
      - PROJECT_ROOT=/app/project
    restart: unless-stopped
    # No healthcheck for STDIN/STDOUT MCP servers
    healthcheck:
      disable: true

  mcp-orchestrator:
    build:
      context: ./mcp-servers/orchestrator
      dockerfile: Dockerfile
    stdin_open: true # CRITICAL for STDIN/STDOUT MCP communication
    tty: true        # CRITICAL for proper terminal handling
    volumes:
      - ./:/app/project
      - orchestrator-logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock # Share Docker socket for direct validator execution
    environment:
      - NODE_ENV=production
      - MCP_DEBUG=true # Enable debug logging
      - PROJECT_ROOT=/app/project
      - DEBUG=mcp:*,stream:*,net:*
      - NODE_DEBUG=mcp,stream,net
      # Add environment variables for validator discovery
      - ARCHITECTURE_GUARD_IMAGE=cyber-hand/architecture-guard:latest
      - DEPENDENCY_VALIDATOR_IMAGE=cyber-hand/dependency-validator:latest
      - DOCS_VALIDATOR_IMAGE=cyber-hand/docs-validator:latest
      - STYLE_VALIDATOR_IMAGE=cyber-hand/style-validator:latest
    restart: unless-stopped
    # No healthcheck for STDIN/STDOUT MCP servers
    healthcheck:
      disable: true

volumes:
  architecture-guard-logs:
  dependency-guard-logs:
  style-validator-logs:
  docs-validator-logs:
  orchestrator-logs:
